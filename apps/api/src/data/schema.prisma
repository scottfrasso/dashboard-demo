datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User{
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?

  posts     Post[]
  reactions Reaction[]
  groups    GroupMembership[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Group {
  id        Int      @id @default(autoincrement())
  name      String   @unique

  isPublic Boolean @default(true)

  posts     Post[]

  groupMembers GroupMembership[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum GroupRole {
  ADMIN
  MEMBER
}

model GroupMembership {
  id        Int      @id @default(autoincrement())
  role      GroupRole

  groupId   Int
  group     Group    @relation(fields: [groupId], references: [id])

  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([groupId, userId])
}

model Post {
  id        Int      @id @default(autoincrement())
  imageURL  String?
  content   String?
  published Boolean  @default(false)

  groupId   Int
  group     Group    @relation(fields: [groupId], references: [id])

  parentPostId Int?
  parentPost   Post?  @relation("ParentPost", fields: [parentPostId], references: [id])

  childPosts   Post[] @relation("ParentPost")

  reactions   Reaction[]

  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ReactionType {
  LIKE
  LOVE
  HAHA
  WOW
  SAD
  ANGRY
}

model Reaction {
  id        Int      @id @default(autoincrement())
  type      String

  postId    Int
  post      Post     @relation(fields: [postId], references: [id])

  userId    Int
  user      User     @relation(fields: [userId], references: [id])

  reactionType ReactionType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
